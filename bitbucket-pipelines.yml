image: node:12.19.0
options:
  max-time: 5
pipelines:
  custom:
    terminate:
      - step:
          name: Terminate UAT stage
          deployment: test
          caches:
            - node
          script:
            - branch=$(echo ${BITBUCKET_BRANCH} | sed s:/:-:g)
            - echo $branch
            - npm ci
            - serverless config credentials --stage $(echo ${branch}:0:7) --provider aws --key ${AWS_ACCESS_KEY_ID} --secret ${AWS_SECRET_ACCESS_KEY}
            - npm run-script deploy -- --stage=$(echo ${branch}:0:7)  > ./deploy.txt
            - output = $(cat ./deploy.txt)
          artifacts:
            - ./deploy.txt
    deploy:
      - step:
          name: Deploy UAT stage
          deployment: test
          caches:
            - node
          script:
            - branch=$(echo ${BITBUCKET_BRANCH} | sed s:/:-:g)
            - echo $branch
            - npm ci
            - serverless config credentials --stage $(echo ${branch}:0:7) --provider aws --key ${AWS_ACCESS_KEY_ID} --secret ${AWS_SECRET_ACCESS_KEY}
            - npm run-script deploy -- --stage=$(echo ${branch}:0:7)  > ./deploy.txt
            - output = $(cat ./deploy.txt)
          artifacts:
            - ./deploy.txt
  default:
    - step:
        name: Test branch
        caches:
          - node
        script:
          - npm ci
          - npm run ci:test
        artifacts:
          - ./coverage/*
          - ./output.json
  tags:
    v*:
      - step:
          name: Deploy to production
          deployment: production
          caches:
            - node
          script:
            - npm ci
            - npm run-script deploy > ./deploy.txt
          artifacts:
            - ./deploy.txt
  pull-requests:
    '**':
      - step:
          name: Test branch
          caches:
            - node
          script:
            - npm ci
            - npm run ci:test
          artifacts:
            - ./coverage/*
            - ./output.json
definitions:
  caches:
    npm: $HOME/.npm
